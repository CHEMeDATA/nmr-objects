//  export method // Should not minimize
 export_Editordjeanner_Version1_SourceMnovaJson_IDnone(param) {
	/* param:
	dataObj        : dataObj,
	objDataField   : dataObj.item.objDataField,
	creatorParam   : dataObj.creatorParam,
	targetObjType  : targetObjType,
	object         : dataObj.objSource
	objoutputFields
	*/
	const obj = this.data;
	const objDataField = param.objDataField;
	const objectObj = param.objectObj;
	const objSource = param.object;
	if (!objSource) {
		console.error(
			"No objSource string in param. Error generated by export_Editordjeanner_Version1_SourceMnovaJson_IDnone param : ",
			param
		);
		return {};
	}
	if (objSource === "nmrSpectrumObject") {
		if (objDataField.passedList[0] === "field1") {
			const oneSpectrum = buildFromNMRspectrumObject(objDataField, obj);
			const mnovaDataset = {
				$mnova_schema:
					"https://mestrelab.com/json-schemas/mnova/2023-07/01/nmr/dataset",
				spectra: [oneSpectrum],
			};

			return mnovaDataset;
		}
	}
  if (objSource === "setSpectra") {
		if (objDataField.passedList[0] === "field1") {
      var spectra = [];
      if (Array.isArray(obj.members)) {
        for (const member of obj.members) {
          const oneSpectrum = buildFromNMRspectrumObject(objDataField, member);
          spectra.push(oneSpectrum);
        }
      }
			const mnovaDataset = {
				$mnova_schema:
					"https://mestrelab.com/json-schemas/mnova/2023-07/01/nmr/dataset",
				spectra: spectra,
			};
			return mnovaDataset;
		}
	}

	if (objSource === "ZZZZZZZZ") {
		var retObj = {};
		var retObj = {};
		if (objDataField.passedList[0] === "field1") {
			retObj.dummy_data = 33;
			return retObj;
		}
		if (objDataField.passedList[0] === "field2") {
			retObj.dummy_data = 44;
			return retObj;
		}
		return retObj;
	}
	console.error(
		`objSource : ${objSource} not implemented from export_Editordjeanner_Version1_SourceMnovaJson_IDnone`
	);
	return {};
}
